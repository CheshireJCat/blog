<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[《狐妖》- 开篇]]></title>
    <url>%2Fblog%2F%E3%80%8A%E7%8B%90%E5%A6%96%E3%80%8B%2F2018-04-25-huyao-1.html</url>
    <content type="text"><![CDATA[《狐妖》开篇“我是你的狐妖”，耳畔轻响。 初见，已被你箍住，回眸，心也被你俘虏。]]></content>
      <categories>
        <category>《狐妖》</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Despair]]></title>
    <url>%2Fblog%2Fno%2F2017-10-19-Despair.html</url>
    <content type="text"><![CDATA[I despair of the hospital and the doctor.At last month, my parents came in Beijing, the city I’m working now. This is the sencond time that my mother come in Beijing for cure of her disease.Before it, she had an operation in Taiyuan. But after the operation, she have a negative attitude at her disease. Now she all of think she can’t be cured and her life isn’t long. At some day not long ago, my father was told that Peking Union Medical College Hospital is best hospital across our country. At the other hand, taking advantage of this National Day holidays, I can take them to traval by the way. Maybe this cound make my mom relax her mood and will be good at her illness. The first trouble is register. It’s really hard. At the Web Registration Platform, almost numbers of major hospital are empty, some secondary hospitals have 1 - 2 numbers, too. We can’t do anything, so we regist the number of Beijing Friendship Hospital. But when we go to the hospital, and was called. My mother is the last. The doctor talk her to have a B-mode ultrasonography. But the hospital is off duty. So we have to do it at the next day. But if we want to consult with doctor, we have to regist again. The next date of that have num is a few days later. We don’t have free time. So I try to search the cattle just for a registration. Luckily, I did it. After a series of discuss with the cattle, he promise me an expert number at a price of ￥600. I have to pay him ￥300 firstly. There’s no way, so I only can believe him and pay him. But the next day, he told me that there is no morning expert number. By last experience, we only want to the afternoon number. My father hear that Beijing Obstetrics and Gynecology Hospital is also well, so we change to get the number of this hospital. The cattle get a number for us immediately. But the price is still ￥600. I don’t delay my mom’s disease and agree it. The day is up. We arrive at the hospital and get the number. When my mother see the patient, she show the result of last hospital to the expert, but the doctor still let her to have a B-mode ultrasonography again, although the result is exactly alike. After it, he say my mom maybe need to have an operation, so he continue make some list we need to draw blood and inspect. Then we pay the list and do many inspect according to the list. At the last, the doctor told us that we come to hospital at the next week. Today, when we come, the doctor has changed and this doctor also let my mom to do the same B-mode ultrasonography two weeks later. This doctor don’t say anything about the last topic of operation. It means that our last blood and inspections have been undone. All of last week are wasteful.It’s reall an outrage.After we come back home, my mother told me that today’s doctor ask her: ‘Why we go to the other hospital ?’ when she see the result of the Friendship Hospital. At once, I understand that these doctor only do things carelessly. They are not responsible for the patient. They write these list just for achievement. My monther is right. If you don’t have relationship with the doctor or the hospital, they will treat you perfunctorily. I’m too young too simple. I blame my mom. Before today, my father and I all think she think too much. In fact, we are wrong. And the doctor are mind about the result of other hospital. We are wrong. Now I don’t know where we can find a responsible doctor who can take a heart to my mom. I only want to know who have the relationship with some doctor or hospital. Maybe only this can cure my mother. But it’s a slim hope. Today, I deeply take cognizant of that the hospital is really dark and disappointing. After surf the web, I get that the bigger the hospital is , the more dark it is. But the ordinary people only can be place at the mercy of hospital. Because every don’t want to go die. So sad.]]></content>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 添加友情链接(静态数据文件)]]></title>
    <url>%2Fblog%2Fconfig%2F2017-04-25-1493100956922.html</url>
    <content type="text"><![CDATA[利用hexo3版本的数据文件功能，可以快速添加生成友情链接 1.添加数据文件在Hexo根目录的source目录创建_data目录，然后在新建的目录中新建links.yml文件，并添加相关配置，如 12百度: http://baidu.com新浪: http://sina.com 2.添加布局文件模板在你想要添加的地方添加模板，我使用的是Next主题，要在footer添加，为了方便，直接找到\themes\next\layout\_partials\footer.swig文件，前面添加：12345678&#123;% if site.data.links %&#125;&lt;div class=&quot;widget tag&quot;&gt; 友情链接： &#123;% for k,v in site.data.links %&#125; &lt;a href=&apos;&#123;&#123; v &#125;&#125;&apos; style=&quot;margin-right:10px&quot;&gt;&#123;&#123; k &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125;&lt;/div&gt;&#123;% endif %&#125; 当然以后为了方便模块化和管理，可以单独建一个文件，然后，用对应的模板语法include进去 这样，以后添加友情链接就很方便了，而且可以举一反三，添加别的新页面和模块内容]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高级函数]]></title>
    <url>%2Fblog%2Fjavascript%2F2016-11-28-js-advanced-functions.html</url>
    <content type="text"><![CDATA[《javascript高级程序设计》 安全类型检测javascript内置的类型检测机制并非完全可靠。 比如safari(直至第四版)对正则表达式的typeof操作符会返回function。 instanceof操作符存在多个全局作用域（一个页面多个frame），的情况下也有问题。例如： 1var isArray = value instanceof Array; 当value是一个数组，且与Array构造函数在同个作用域时，才会返回true,如果value在别的frame，就会返回false。-]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo自动打开编辑器]]></title>
    <url>%2Fblog%2Fconfig%2F2016-11-16-201411151152.html</url>
    <content type="text"><![CDATA[每次发表博客的时候，还得找到hexo生成的文件，然后拖到编辑器里吗？何不自动化一下，人生又美满了。 hexo的github issue下，作者给出了解决办法： You can try to listen to the new event. For example:1234567891011var spawn = require(&apos;child_process&apos;).spawn;// Hexo 2.xhexo.on(&apos;new&apos;, function(path)&#123; spawn(&apos;vi&apos;, [path]);&#125;);// Hexo 3hexo.on(&apos;new&apos;, function(data)&#123; spawn(&apos;vi&apos;, [data.path]);&#125;); 实践之后，还是有坑的，操作步骤如下： 在hexo/你的博客的根目录下创建一下scripts目录(已有就算了)，在执行命令的时候，会运行这个目录里的js 新建一个js文件，名字随意 在目录里写入以下代码 hexo 3.x12345var exec = require(&apos;child_process&apos;).exec;hexo.on(&apos;new&apos;, function(data)&#123; exec(&apos;start D:\\ruanjian\\SublimeText3\\sublime_text.exe &apos; + data.path);&#125;); hexo 2.x12345var exec = require(&apos;child_process&apos;).exec;hexo.on(&apos;new&apos;, function(path)&#123; exec(&apos;start D:\\ruanjian\\SublimeText3\\sublime_text.exe &apos; + path);&#125;); 保存后就可以了 http://www.tuicool.com/articles/iuiieaa这篇文章说的是： 如果你是windows平台的Hexo用户，则将下列内容写入你的脚本：1234567891011var spawn = require(&apos;child_process&apos;).spawn;// Hexo 2.x 用户复制这段hexo.on(&apos;new&apos;, function(path)&#123; spawn(&apos;start &quot;markdown编辑器绝对路径.exe&quot; &apos; + path);&#125;);// Hexo 3 用户复制这段hexo.on(&apos;new&apos;, function(data)&#123; spawn(&apos;start &quot;markdown编辑器绝对路径.exe&quot; &apos; + data.path);&#125;); 如果你是Mac平台Hexo用户，则将下列内容写入你的脚本：12345678910var exec = require(&apos;child_process&apos;).exec;// Hexo 2.x 用户复制这段hexo.on(&apos;new&apos;, function(path)&#123; exec(&apos;open -a &quot;markdown编辑器绝对路径.app&quot; &apos; + path);&#125;);// Hexo 3 用户复制这段hexo.on(&apos;new&apos;, function(data)&#123; exec(&apos;open -a &quot;markdown编辑器绝对路径.app&quot; &apos; + data.path);&#125;); 但是笔者的win10用 spawn不行,exec却可以。 总而言之，实现原理就是用nodejs执行命令行]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[After Some Things]]></title>
    <url>%2Fblog%2Fno%2F2016-11-14-201611141451.html</url>
    <content type="text"><![CDATA[I’m really busy these days. A few weeks ago, I lost my wallet. Sure, my ID card , bank cards, social security card and others gone.After it, I asked for leave and back home to make an ID card. But there is no way to make others. Because others are all need the ID card that take more than one month before I get it. Next is my teeth. When I cleaned them in stomatology hospital. The doctor told me that I have three wisdom teeth. And two of them is cavity. The third is askew, it is horizontal exactly. One day, I put many millet pepper when I cooked my dinner. The next day, I got a sore, and my horizontal tooth got inflammation. It’s so painful that I can’t stand it. So, I agreed to pull out them without hesitation. So far, I have pull two of them. The last one need professional doctor to deal. But the doctor has no time. So I have to wait for some time. At last week, my grandpa passed away. I took a week off work to go home to help my family take care of things. About it, I feel that it’s not a bad thing. At least, he will not be tortured by pain.]]></content>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度镜子之css3镜像变换]]></title>
    <url>%2Fblog%2Ftips%2F2016-10-27-201610271740.html</url>
    <content type="text"><![CDATA[今天无意中发现了一个叫百度镜子的网站，下面是地址 http://www.udiab.net/ 连baidu这个单词都镜像成了udiab，作者很有想法 转念想一下实现原理，也简单，就是在body加个css样式就可以了1transform:matrix(-1,0,0,1,0,0); 镜像对称必须用矩阵变换才能实现，且只能对有块级元素特性的元素生效 demo如下： 正常的 正常的]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Dream]]></title>
    <url>%2Fblog%2Fno%2F2016-10-27-Dream.html</url>
    <content type="text"><![CDATA[Dream record 2016-10-27架子鼓，学校，请假，实验]]></content>
      <tags>
        <tag>dream</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jekyll之博客分类]]></title>
    <url>%2Fblog%2Fconfig%2F2016-08-25-2016-8-25-1472091755618.html</url>
    <content type="text"><![CDATA[博客分类这件事，之前由于忙，只是简单的作了一下处理：在首页列出分类列表，然后写了一段js，点击的时候隐藏非当前分类的文章，展示当前分类的文章。不过这也不是长久之计，当文章数量多起来的时候，效率可想而知。所以今天抽出一点时间，按正规的方式加上分类。下面开始实现： 添加category插件关于jekyll的插件，可以参考官方的http://jekyll.bootcss.com/docs/plugins/，也可以根据官方实例写自己需求的插件； 在根目录下新建 _plugins 文件夹 添加插件，直接复制官方的源码即可： 1234567891011121314151617181920212223242526272829303132module Jekyll class CategoryPage &lt; Page def initialize(site, base, dir, category) @site = site @base = base @dir = dir @name = &apos;index.html&apos; self.process(@name) self.read_yaml(File.join(base, &apos;_layouts&apos;), &apos;category_index.html&apos;) self.data[&apos;category&apos;] = category category_title_prefix = site.config[&apos;category_title_prefix&apos;] || &apos;&apos; self.data[&apos;title&apos;] = &quot;#&#123;category_title_prefix&#125;#&#123;category&#125;&quot; end end class CategoryPageGenerator &lt; Generator safe true def generate(site) if site.layouts.key? &apos;category_index&apos; dir = site.config[&apos;category_dir&apos;] || &apos;categories&apos; site.categories.keys.each do |category| site.pages &lt;&lt; CategoryPage.new(site, site.source, File.join(dir, category), category) end end end endend 列出博客列表在需要方式快速跳转分类的地方列出列表 1234&#123;\% for category in site.categories %&#125; &#123;\% for post in category.first %&#125;&lt;li&gt;&lt;a class=&quot;sidebar-btn&quot; href=&quot;\&#123;\&#123;site.baseurl&#125;&#125;/categories/\&#123;\&#123; category | first &#125;&#125;&quot;&gt;\&#123;\&#123;category.first&#125;&#125;(\&#123;\&#123;category.last.size&#125;&#125;)&lt;/a&gt;&lt;/li&gt; &#123;\% endfor %&#125;&#123;\% endfor %&#125; 这里jekyll会进行编译，所以添加了\来阻止，使用的时候删掉\ 添加模板页面在 _layouts 文件夹新建 category_index.html 文件，在其中写好模板代码： 12345678910111213141516171819202122232425---layout: default---&lt;h2&gt;\&#123;\&#123; page.title &#125;&#125;&lt;/h2&gt;&lt;div class=&quot;row&quot;&gt; &lt;ul class=&quot;col s12 m10 section&quot;&gt; &#123;\% for post in site.categories.[page.category] %&#125; &lt;li class=&quot;card blog-item&quot; data-category=&quot;\&#123;\&#123;post.category&#125;&#125;&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;div class=&quot;card-title&quot;&gt;&lt;a href=&quot;/blog\&#123;\&#123; post.url &#125;&#125;&quot;&gt;\&#123;\&#123; post.title &#125;&#125;&lt;/a&gt;&lt;/div&gt; &lt;p class=&quot;excerpt&quot;&gt;\&#123;\&#123; post.excerpt | remove: &apos;&lt;p&gt;&apos; | remove: &apos;&lt;/p&gt;&apos; &#125;&#125;&lt;/p&gt; &lt;p&gt;\&#123;\&#123; post.date | date: &quot;%Y年%m月%d日&quot; &#125;&#125;&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &#123;\% endfor %&#125; &lt;/ul&gt;&lt;/div&gt;&lt;ul class=&quot;sidebar&quot;&gt; &lt;li&gt;&lt;a class=&quot;sidebar-btn&quot; href=&quot;\&#123;\&#123;site.baseurl&#125;&#125;&quot; data-category=&quot;all&quot;&gt;all&lt;/a&gt;&lt;/li&gt; &#123;\% for category in site.categories %&#125; &#123;\% for post in category.first %&#125;&lt;li&gt;&lt;a class=&quot;sidebar-btn&quot; href=&quot;\&#123;\&#123;site.baseurl&#125;&#125;/categories/\&#123;\&#123; category | first &#125;&#125;&quot; data-category=&quot;\&#123;\&#123;category.first&#125;&#125;&quot;&gt;&#123;&#123;category.first&#125;&#125;(\&#123;\&#123;category.last.size&#125;&#125;)&lt;/a&gt;&lt;/li&gt; &#123;\% endfor %&#125; &#123;\% endfor %&#125;&lt;/ul&gt; jekyll 构建运行1jekyll server 转载请注明出处]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>blog</tag>
        <tag>搭建</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jekyll 第三方插件无法在 github Pages 使用的解决办法]]></title>
    <url>%2Fblog%2Fconfig%2F2016-08-25-2016-8-25-1472104723404.html</url>
    <content type="text"><![CDATA[今天抽了点时间处理了一下博客的分类系统，在本地环境的时候运行的挺好，上传到github之后，却产生了404错误，分类页面的展示页面没有生成。 经过一番查找，发现问题是： 在 GitHub Pages 使用插件GitHub Pages是由Jekyll提供技术支持的，考 虑到安全因素，所有的 Pages 通过 –safe 选项禁用了插件功能，因此如果你的网 站部署在 Github Pages ，那么你的插件不会工作。 不过仍然有办法发布到 GitHub Pages，你只需在本地做一些转换，并把生成好的文件上传到 Github 替代 Jekyll 就可以了。 也只能这么解决了，不过总不能每次都生成之后拷贝，覆盖，这样太麻烦了。 google一下之后，找到一个不错的解决方法，大致就是现在本地创建一个用于写作的分支，如docs 然后删除之前ph-pages或者master分支的内容，再讲docs下生成的静态文件复制到网页所在分支 大神写了一份批处理的sh，用来自动化这一流程，如下： 12345678910111213141516171819202122232425262728293031323334#!/bin/bashfunction exe_cmd() &#123; echo $1 eval $1&#125;if [ $# -lt 1 ]; then echo &quot;Usage: sh $0 [ gh-pages | master ]&quot; exitfibranch=$1if [ -z &quot;$branch&quot; ] || [ &quot;$branch&quot; != &quot;master&quot; ]; then branch=&apos;gh-pages&apos;fiexe_cmd &quot;jekyll build&quot;if [ ! -d &apos;_site&apos; ];then echo &quot;not content to be published&quot; exitfiexe_cmd &quot;git checkout $branch&quot;error_code=$?if [ $error_code != 0 ];then echo &apos;Switch branch fail.&apos; exitelse ls | grep -v _site|xargs rm -rf exe_cmd &quot;cp -r _site/* .&quot; exe_cmd &quot;rm -rf _site/&quot; exe_cmd &quot;touch .nojekyll&quot;fi 写作完成之后,先将当前分支内容保存提交到远程，然后运行：1./publish-gh-pages.sh gh-pages 然后提交到远程即可： 123git add .git commit -m &apos;new blog&apos;git push --all origin 参考自：http://www.liaohuqiu.net/cn/posts/jekyll-plugins-on-github-pages/ 转载请注明出处]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>jekyll</tag>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[After the Ending & Before the Beginning]]></title>
    <url>%2Fblog%2Fdaisy%2F2016-08-18-2016-8-18-1471505585364.html</url>
    <content type="text"><![CDATA[At the week before last week, I left the last company. Compare to my friends, it seems that I was easier. Everyone who work at that company know my idea when I moved out to rent for myself. And I have finished all task at my position. I really need a big enviroment to practice and improve myself. And I thank my past leader that they can understand me really. It is indeed something rare and deserving praise. LOL… After it, I take off for myself about a week. Had more than one and half years since I enter my careers. I really take congnizance of the value of time. When you concentrate on the job, day and day, week and week, so fast. The rest time is more precious. So, if anyone spend the rest time with you and willing to go anywhere on weekends. Just cherish them , your present and future. If you like or love somebody, try to spend with them. Not only your girlfriend or boyfriend, but also your parents and grandparents when they are live in world. At the week I take off, I wake up at 7:00 am habitually, and get up at about 9:00 am .Then take some breakfast easily. Sometimes play games, sometimes look up technology of dry cargo, sometimes just in a daze. I buy lots of vegetables and cook some dish I want. In a afternoon, I cook two dish - Mapo Tofu and Wax Gourd Tofu. 233333 . Really funny. Buy really delicous. But after some days, I feel really bored. Becanuse in Beijing, I have only several friends. Of course, they are all working. I also don’t want to anywhere in myself. Everyday, I just stay at home with myself. On the other hand, if I can’t deal with my social security before 25th of this month. It will break. Although I don’t want to develop long-term in Beijing. It’s better than that. So in this week, I make up my mind to apply for a job. In fact, before I left the last office, I has been ready the projects for interview. And at the week I take off, I prepared the resume. On Tuesday, I hand in several resume through the Internet in Lagou. Such as Drops taxi、 Sina、Meituan. Without doubt, my resume was refused. I know I have no ability to work for them. I know the fact. But in this fashion, I can keep calm to study hard to improve myself.I can’t be prone to extravagant fancies. In the past, I really arrogant. Today I need to precipitate. Come on, guy!]]></content>
      <categories>
        <category>daisy</category>
      </categories>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bower使用笔记]]></title>
    <url>%2Fblog%2Ftools%2F2016-07-25-2016-7-25-1469411061667.html</url>
    <content type="text"><![CDATA[bower，说的简单点就是前端资源管理器，比如应用中需要用到bootstrap库，以前， 可能会去官网或者静态资源库等地方查看版本、然后下载。使用bower，只需要一条命令行bower install bootstrap,就可以自动下载，甚至可以加上#3.0.0，直接下载需要的版本，当然功能不止如此。 安装先查看一下版本 bower -v 如果没有安装的话 npm install bower 准备新建配置文件bower init 安装需要的库通过 bower.json 文件安装 bower install 通过在github上注册的包名安装 bower install jquery GitHub短链接 bower install desandro/masonry Github上的 .git bower install git://github.com/user/package.git URL bower install http://example.com/script.js 安装时候保留依赖bower install &lt;package&gt; --save bower install &lt;package&gt; --save-dev 两者都会将依赖信息添加到配置文件中，-dev一般多用于开发环境，比如测试 更改默认安装目录bower 会把包默认安装到 bower_components目录，如果要更改路径，新建一个.bowerrc文件，里面内容为,现在安装之后会将库存放在在lib文件夹 { &quot;directory&quot; : &quot;lib&quot; } 更新库bower update bower update &lt;package&gt; //如果不给出具体的库，会将所有可以更新的库更新 卸载库bower uninstall &lt;package&gt; //会将当前库依赖的库一起卸载，若依赖的库被其他库依赖，则不会 卸载本地多余的库bower prune 缓存列出缓存bower cache list bower cache list vue vue=https://github.com/vuejs/vue.git#1.0.26 清除缓存bower cache clean bower cache clean &lt;name&gt; [&lt;name&gt; ...] bower cache clean &lt;name&gt;#&lt;version&gt; [&lt;name&gt;#&lt;version&gt; ..] 使用本地缓存如果别的应用安装过你现在要用到的库，可以直接从本地缓存提取安装，加速咯！ bower install &lt;package&gt; --offline 信息查看列出清单bower list //查看目录信息 --relative，-r bower list &lt;package&gt; -r //生成简单json格式映射源 --paths，-p bower list &lt;package&gt; -p 通过包名查看包在网上的地址1bower lookup &lt;name&gt; 查看信息123bower info &lt;package&gt;bower info &lt;package&gt; [&lt;property&gt;]bower info &lt;package&gt;#&lt;version&gt; [&lt;property&gt;] 在浏览器打开库的主页123bower homebower home &lt;package&gt;bower home &lt;package&gt;#&lt;version&gt; 查看链接12bower link bower link &lt;name&gt; [&lt;local name&gt;] 搜索库1bower search &lt;name&gt; 注册1bower register &lt;name&gt; &lt;url&gt; 登录12bower login//-t, --token 通过身份令牌而不是用户名和密码登录 可选参数force强制重新安装已安装的包,若有冲突直接安装最新版 1-f，--force json输出json格式记录1-j，--json 日志输出日志信息，如错误，冲突，警告，行动，信息，调试 1-l，--loglevel 离线离线使用本地缓存 1-o，--offline 安静模式只输出重要信息 1-q，--quiet 无信息模式不输出任何东西，除了错误。 1-s，--silent 详细信息输出详细信息 1-V，--verbose 可选项包名12jquerynormalize.css Git的端点12https://github.com/user/package.gitgit@github.com:user/package.git 可以不包含.git 本地文件夹1my/local/folder/ 速记地址默认是github上的 1user/package URL可以当做下载器 1234http://example.com/script.js http://example.com/style.css http://example.com/package.zip（内容将被解压）http://example.com/package.tar（内容将被解压） 可选项版本1#1.2.3 版本范围1234＃1.2 ＃~1.2.3 ＃^ 1.2.3 ＃&gt; = 1.2.3 &lt;2.0 git标签、sha、分支123#&lt;tag&gt;#&lt;sha&gt;#&lt;branch&gt; svn 版本1#&lt;revision&gt; 编程API12345678910111213var bower = require('bower');bower.commands.install(['jquery'], &#123; save: true &#125;, &#123; /* custom config */ &#125;).on('end', function (installed) &#123; console.log(installed);&#125;);bower.commands.search('jquery', &#123;&#125;).on('end', function (results) &#123; console.log(results);&#125;); 四种事件类型： log 记录状态和进度信息 prompt 请求用户输入关键信息 error 出错 end 运行结束 多版本安装如果需要安装多个版本，比如多个版本的jquery 12345678# 安装jquery v1.7.0bower install jquery-older=juqery#1.11.1 [&lt;options&gt;]# 安装jquery v1.9.0bower install jquery-old=juqery#2.4.1 [&lt;options&gt;]# 安装最新版jquerybower install jquery [&lt;options&gt;] 转载请注明出处]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>命令行</tag>
        <tag>库管理</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Some Recent Things]]></title>
    <url>%2Fblog%2Fdaisy%2F2016-07-20-2016-7-20-1468976470689.html</url>
    <content type="text"><![CDATA[There is really too many things lately. In my company where I’m working now, my two good friends have quit here on after another. The specific reason is too cumbersome to be said.As for me, last Friday, I also submitted my resignation application. I think I need better enviroment to practice and improve my front-end vocational skills. And at the week before last,I make a move from the house near the company where my company provide for the employee to the new house where I rent with my college friend who just graduated. Because when I want to jump , it’s embarrassed to continue live in the old house. When I make the move, I believe my colleagues now all know my purpose. So when I submitted my application, none of them is surprised. These days I will arrange my project and put some representative codes up my personal website for the future interview. And there is some scrappy follow-up work need to deal. After this, I hope I can get a job that I can work with group that is profession FEers. I need to catch up with the new techonogy. At the new house, I almost get up at about 7:00am , come back home at about 7:30pm ,then cook the dinner for myself and my roommate. Sometimes, when he work overtime, I attempt to cook some dish that I haven’t do. I really enjoy cooking. I feel I eat much more than before obviously. Just it’s really delicious. Ha-ha!!! I also have a small desire that I hope one day when I go home, there is a hearty dinner waitting for me. Ok, that’s all for today! Love you, my dear Miss Jiang! 禁止转载]]></content>
      <categories>
        <category>daisy</category>
      </categories>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[console的用法]]></title>
    <url>%2Fblog%2Fjavascript%2F2016-06-29-2016-6-29-1467188211060.html</url>
    <content type="text"><![CDATA[console.logConsole.log 是最简单输出信息到 console 窗口的方法，支持多个参数，该方法会把 这些参数组合在一起显示log 方法第一个参数支持类似 C 语言 printf 字符串替换模式，Log 支持下面几种替换模式 %s 代替字符串 %d 代替整数 %f 代替浮点值 %o 代替 Object 12345678910111213141516console.log("%d年%d月%d日"，2014,6,25);=&gt;2014年6月25日``` ##### console.debug，info，warn，error 这 4 种方法与 log 方法使用一模一样，只是显示的图标和文字颜色不一样. * console.info 用于输出提示性信息 * console.error用于输出错误信息 * console.warn用于输出警示信息 * console.debug用于输出调试信息 ##### console.assert assert 方法类似于单元测试中的断言，当 expression 表达式为 false 的时候，输出后面的信息 console.assert(2==1)=&gt; VM146:1 Assertion failed:(anonymous function) =&gt; console.assert(1==1)123456789101112##### console.clear 清空console中的所有信息（chrome不支持） ##### console.firxml 等同于log，将html元素的html代码打印出来 ##### console.trace 可以查看当前函数的调用堆栈信息，即当前函数是如何调用的 function doTask(){ doSubTask(1000,10000);} function doSubTask(countX,countY){ for(var i=0;i&lt;countX;i++){ for(var j=0;j&lt;countY;j++){} } console.trace();}doTask(); 输出：console.trace()doSubTaskdoTask(anonymous function)_evaluateOn_evaluateAndWrapevaluate1234##### console.group 将输出的信息进行分组方便阅读查看 console.group(‘A’);console.log(‘a’);console.log(‘b’);console.log(‘c’);console.groupEnd(); =&gt;A a b c123456789101112131415161718##### console.time(name)/console.timeEnd(name) 创建计时器 ``` console.time(&apos;test&apos;)var a = 0;for(var i = 0;i&lt;100;i++)&#123; a+=i;&#125;console.log(a);console.timeEnd(&apos;test&apos;)=&gt;test: 计时器开始4950test: 1.77ms console.table(data)把data对象用表格的方式显示出来，仅支持firebug 12345678910111213141516171819202122232425var a = &#123;a:1,b:2&#125;;console.table(a)``` &lt;table style=&quot;width:100px;margin:0 auto;border:1px solid #ddd&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;索引&lt;/th&gt; &lt;th&gt;值&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;a&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;b&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;##### console.dir(object) 列出对象的所有方法,不同浏览器显示的内容不同,比如列出console对象的方法 console.dir(console);``` 转载请注明出处]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>console</tag>
        <tag>调试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gulpfile通用配置]]></title>
    <url>%2Fblog%2Fconfig%2F2016-06-27-2016-6-27-1466994001633.html</url>
    <content type="text"><![CDATA[安装插件npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-clean gulp-notify gulp-rename gulp-livereload gulp-cache --save-dev 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768// 插件var gulp = require('gulp'), sass = require('gulp-ruby-sass'), autoprefixer = require('gulp-autoprefixer'), minifycss = require('gulp-minify-css'), jshint = require('gulp-jshint'), uglify = require('gulp-uglify'), imagemin = require('gulp-imagemin'), rename = require('gulp-rename'), clean = require('gulp-clean'), concat = require('gulp-concat'), notify = require('gulp-notify'), cache = require('gulp-cache'), livereload = require('gulp-livereload');// stylesgulp.task('styles', function() &#123; return sass('src/styles/*.scss',&#123; style: 'expanded'&#125;) .pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4')) .pipe(gulp.dest('dist/styles')) .pipe(rename(&#123; suffix: '.min' &#125;)) .pipe(minifycss()) .pipe(gulp.dest('dist/styles')) .pipe(notify(&#123; message: 'Styles task complete' &#125;)) .pipe(livereload());&#125;);// scriptsgulp.task('scripts', function() &#123; return gulp.src('src/scripts/**/*.js') .pipe(jshint()) .pipe(jshint.reporter('default')) .pipe(concat('main.js')) .pipe(gulp.dest('dist/scripts')) .pipe(rename(&#123; suffix: '.min' &#125;)) .pipe(uglify()) .pipe(gulp.dest('dist/scripts')) .pipe(notify(&#123; message: 'Scripts task complete' &#125;)) .pipe(livereload());&#125;);// imagesgulp.task('images', function() &#123; return gulp.src('src/images/**/*') .pipe(cache(imagemin(&#123; optimizationLevel: 3, progressive: true, interlaced: true &#125;))) .pipe(gulp.dest('dist/images')) .pipe(notify(&#123; message: 'Images task complete' &#125;)) .pipe(livereload());&#125;);// cleangulp.task('clean', function() &#123; return gulp.src(['dist/styles', 'dist/scripts', 'dist/images'], &#123;read: false&#125;) .pipe(clean());&#125;);// defaultgulp.task('default', ['clean'], function() &#123; gulp.start('styles', 'scripts', 'images');&#125;);// watchgulp.task('watch', function() &#123; livereload.listen(); gulp.watch('src/styles/**/*.scss', ['styles']); gulp.watch('src/scripts/**/*.js', ['scripts']); gulp.watch('src/images/**/*', ['images']);&#125;); 转载请注明出处]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>gulp</tag>
        <tag>前端构建工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[名字什么的就这样吧!]]></title>
    <url>%2Fblog%2Fdaisy%2F2016-06-16-2016-6-16-1466074328958.html</url>
    <content type="text"><![CDATA[Recently as yesterday，it sames to have become lazy. I got some book by borrowing and buying. I researched the angular deeply, but still didn’t have some feel to practice. It’s necessary to take time off to write some code in angular.If not so, it’s sure to forgot it. The 《Math of coder》 this book let me feel some interested. When I looked it casually， the answer of why 0 of the 10 party is 1 is very very convincing. I had found some book about this type of book. In the future, plan to buy them to enjoy and study.And the 《Superstring theory》（超弦理论），I am still interested in the space-time. Although my feel is also blur, I hope I can travel through time, don’t you? NodeJs still had no improvement. The FE update so quickly. When I study, the code of course is also error because of edition. So hate！ No，I have to catch up with the progress. I have so much technology to master, such as canvas , threeJs , webGL ,es6 and so on. Come on! I don’t know that if Mr Jiang get his job. After it, we plan to rent a room somewhere. I can also exprerience the taste of renting. Looking forward to it. And Mr Jiang come on ,too! As for Miss Jiang, new friend and new partner, I wish we can be deeply attached to each other, l y, umm.]]></content>
      <categories>
        <category>daisy</category>
      </categories>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Usual Sunday]]></title>
    <url>%2Fblog%2Fdaisy%2F2016-06-05-2016-6-5-1465126881845.html</url>
    <content type="text"><![CDATA[As usual，today I get up at about 7:30am ,with tired body and dry left eye and right eye .Not because did how busy job. All the reason is that I read the 《re0》until 2:00 am of today. It’s been so long since I was addicted to a novel. So, it’s really wonderful Admittedly. Dimension and time has irresisible magic. But, today’s purport is to pick up little brother named Ziwen Jiang. In every sense, he is also an important friend. So, even though I can make a lie avoid today’s trip, I can’t do it really. I also want to keep some fiendship. If you want, and you have to pay. Time, energy and so on… After meet together, we got to the place where Mr Jiang will put up in the coming days. Although I had lived in Beijing more than one year, I was also astounded at the scene —– about twenty people live in a room. The natual result is sharp smell. Yes, very sharp. In my eyes, this friend has nice environment at home. I don’t know if he can stand this. At next second, the answer was no, but he also acceptted this hard spot. That was not to matter. Just lived here for the occasion. We will rent a comfortable room in future. Then we walked around for some time, help him shopped some daily supplies. At last, left my IC card for him and handled a new card to came back to my house.I don’t know what to write, just feel that I have to work hard for my life, too. In the end, Long live Rem.]]></content>
      <categories>
        <category>daisy</category>
      </categories>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nodeJs快速创建新博客]]></title>
    <url>%2Fblog%2Fconfig%2F2016-06-01-2016-6-1-1464781883610.html</url>
    <content type="text"><![CDATA[安装nodeJs教程自己百度233333 在blog文件夹下面新建一个nb.js的js文件（意思是new blog） 输入代码： 'use strict'; var fs = require('fs'); var path = require('path'); var date = new Date(), year = date.getFullYear(), month = date.getMonth() + 1, day = date.getDate(), time = date.getTime(), name = path.join(__dirname,'_posts',[year,month,day,time].join('-')+'.markdown'), content = `--- layout: blog title: BolgTitle category: BolgCategory excerpt: BolgExcerpt tags: BolgTags --- `; if(fs.exists(name,function(res){ if(!res){ fs.writeFile(name, content, 'utf-8',function (err) { if (err) throw err; console.log("Export Account Success!"); }); }else{ console.log(name+' has exist!') } })); 在blog目录运行 node nb.js 转载请注明出处]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>blog</tag>
        <tag>搭建</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用github pages搭建博客]]></title>
    <url>%2Fblog%2Fconfig%2F2016-05-31-use-github-pages-build-blog.html</url>
    <content type="text"><![CDATA[github pages 注册一个github账号，并验证邮箱； 创建一个repo Create a new repository创建一级域名网站，填写 username.github.io ,例如 CheshireJCat.github.io创建子域名网站，填写任意想取的名字即可 勾选Initialize this repository with a README（可选，建议勾选） 点击Create repository按钮，生成repo 进入repo页面，点击Settings按钮进入设置 在 GitHub Pages 项目，点击Launch automatic page generator，然后选择模板，确认即可 在地址栏 输入 username.github.io或者username.github.io/repoName 即可进入创建好的网站主页 git管理 可以在web页面进行代码管理，或者下载客户端，lz比较喜欢用黑窗口 1. 下载安装git https://git-scm.com/download/ Windows下要使用很多Linux/Unix的工具时，需要Cygwin这样的模拟环境，Git也一样。Cygwin的安装和配置都比较复杂，就不建议你折腾了。不过，有高人已经把模拟环境和Git都打包好了，名叫msysgit，只需要下载一个单独的exe安装程序，其他什么也不用装，绝对好用。 msysgit是Windows版的Git，从https://git-for-windows.github.io下载（网速慢的同学请移步国内镜像），按默认选项安装即可。 安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功 git命令行也可以使用tab键自动补全命令 成功后，设置全局参数git config --global user.name &quot;Your Name&quot; git config --global user.email &quot;email@example.com&quot; 让git显示颜色git config --global color.ui true (如需更新git git clone https://github.com/git/git) 详细git教程推荐 廖雪峰的git教程 2. 克隆远程仓库代码到本地mkdir blog cd blog git clone https://github.com/CheshireJCat/blog 本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，需要一点设置 ： 3. 创建SSH Key ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 登录github，点击右上角头像 &gt; settings &gt; SSH and GPG keys 或者进入https://github.com/settings/keys 在你用户主目录里找到.ssh目录，打开公钥id_rsa.pub,将内容添加到Key里，就可以向git托管推送本地代码了 4. 推送本地更新到远程仓库将工作去代码修改部分转移到暂存区 git add . 将暂存区内容提交到当前分支 git commit -m &quot;update info&quot; 提交到远程仓库 如果是CheshireJCat.github.io 根域名 git push origin master 子域名默认会将网站代码建立到 gh-pages 分支,提交需使用 git push origin gh-pages 会提示输入验证信息（github的登录邮箱和密码） 常见报错处理请参考http://www.open-open.com/lib/view/open1366080269265.html jekyll 确保电脑安装了ruby、pyhon、easy_install 并配置好了环境变量测试代码如下： python -V easy_install --version ruby -v 安装python下载https://www.python.org/downloads/安装，添加到环境变量 安装easy_install下载/sources/python/ez_setup.py 使用python运行ez_setup.py文件 python ez_setup.py python文件夹下面多了个scripts的目录,表示安装成功了 右键我的电脑--高级系统设置--高级--环境变量--系统变量--path--编辑--后面加上 ;C:\Python27\Scripts设置好全局变量，保存 cmd控制台输入 easy_install --version测试安装 安装ruby下载http://rubyinstaller.org/downloads/ 解压，双击运行，next。。。出现Add Ruby executables to your PATH时勾选，最后将C:\Ruby\bin添加到环境变量 cmd控制台输入 ruby -v测试安装 安装 Pygments 语法高亮的插件需要安装 Python 并在网站的配置文件 _config.yml 里将 highlighter 的值设置为 pygments easy_install Pygments 安装Jekyllgem install jekyll 由于墙的原因，这里一般会报错 解决办法解决国内gem不能用的问题 gem sources --remove https://rubygems.org/ gem sources -a https://ruby.taobao.org/ gem sources -l 安装之后，用命令行进入一个文件夹，新建一个站点 jekyll new myblog 进入目录 cd myblog 开启服务 jekyll serve 默认端口为4000，如报错，可能原因为端口被占用时，修改站点根目录下面的 _config.yml,添加 port: 5001 重新jekyll serve 运行即可 测试成功后，将此站点的文件拷贝替换到之前的blog文件夹 git add . git commit -m &quot;update&quot; git push origin gh-pages 更新到远程仓库即可 发表博客 在_post文件夹，复制或新建一个html或者markdown文件，命名为年-月-日-标题.markdown（如2016-05-30-new-blog.markdown）格式 头部输入： --- layout: default title: "My First Blog" category: daisy excerpt: my first daisy in 2016. tags: daisy --- layout 表示模板文件 title 博客标题 category 博客分类 excerpt 博客摘要 tags 博客标签 然后再下面输入博客的内容,然后用git提交，就可以了markdown语法markdown语法详解 域名绑定 以我自己的域名为例lmaomaoz.com 在blog根目录下新建一个文件 CNAME 在里面输入自己的顶级域名 lmaomaoz.com 然后用git提交到远程 在域名解析控制台解析域名，lz用的万网（和阿里云合作了）解析的 添加两条A记录：记录类型是A 主机记录是@ 解析线路默认 记录值一个用192.30.252.154 另一个用192.30.252.153 添加一条CNAME记录：记录类型是CNAME 主机记录是www 解析线路默认 记录值用CheshireJCat.github.io 也就是你自己要解析的重定向的域名 等一段时间，等官方解析服务器记录后就可以通过域名来直接访问博客或者网站 其他 域名解析也有网友推荐dnspos,https://www.dnspod.cn/,教程自行百度 此方案同样适用于搭建静态网站 jekyll详细配置适用文档http://jekyll.bootcss.com/ 博客的评论可以用 国外的 disqus，或者国内的 友言或者多说等其他评论系统 简单配置即可 转载请注明出处]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>git jekyll 配置 blog 搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My First Blog]]></title>
    <url>%2Fblog%2Fdaisy%2F2016-05-30-my-first-daisy.html</url>
    <content type="text"><![CDATA[This is my first daisy in 2016. In recently , every day is a mystery. Apart form working, the rest time is filled width checking Weibo, Q-zone, chatting in QQ width some net friends who play a game named JianXiaQingYuan3 ,surfing on the bilibili . Not only that, everyday when I go to bed ,it is almost 1am.So horrible ! So horrible ! So horrible ! In order to correct my lifestyle, I decide to write daisy to warn myself that how I do nothing and waste time. On the other hand, I found my English is poor and poor. Most of vocabulary and grammar is backen to the English Teacher.I hope that I can pick up my English by this way of writing daisy in English . As for others, I begin to use github , but now, there is nothing to push, so just begin width blog ,maybe it is not so bad. Come On! Guy!(｡•ˇ‸ˇ•｡)]]></content>
      <categories>
        <category>daisy</category>
      </categories>
      <tags>
        <tag>daisy</tag>
      </tags>
  </entry>
</search>
